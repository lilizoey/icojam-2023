[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://b2obpnsm73d5"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hdhas"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ytbx2"]
source = 1

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_essy3"]
constant = Color(0, 0.0797377, 1, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_4kosv"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D screen_tex_frg_5 : hint_screen_texture;



void fragment() {
// ColorConstant:6
	vec4 n_out6p0 = vec4(0.000000, 0.079738, 1.000000, 1.000000);


// Input:4
	vec2 n_out4p0 = SCREEN_UV;


	vec4 n_out5p0;
// Texture2D:5
	n_out5p0 = texture(screen_tex_frg_5, n_out4p0);


// VectorOp:7
	vec4 n_out7p0 = n_out6p0 * n_out5p0;


// Output:0
	COLOR.rgb = vec3(n_out7p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1040, 200)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_hdhas")
nodes/fragment/4/position = Vector2(40, 240)
nodes/fragment/5/node = SubResource("VisualShaderNodeTexture_ytbx2")
nodes/fragment/5/position = Vector2(400, 220)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorConstant_essy3")
nodes/fragment/6/position = Vector2(500, 120)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorOp_4kosv")
nodes/fragment/7/position = Vector2(808, 140)
nodes/fragment/connections = PackedInt32Array(4, 0, 5, 0, 5, 0, 7, 1, 6, 0, 7, 0, 7, 0, 0, 0)
